<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Corvus.HighPerformance</name>
    </assembly>
    <members>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.GetRentedBufferAndLengthAndDispose">
            <summary>
            Return the underlying rented buffer, if any, and the length of the string. This also
            disposes the instance.
            </summary>
            <remarks>
            <para>
            Once you have retrieved this, you must not make any further use of
            <see cref="T:Corvus.HighPerformance.ValueStringBuilder"/>. You should call <see cref="!:ReturnRentedBuffer(char[]?)"/>
            once you no longer require the buffer.
            </para>
            </remarks>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.ReturnRentedBuffer(System.Char[])">
            <summary>
            Returns the buffer retrieved from <see cref="!:RentedChars"/>.
            </summary>
            <param name="buffer">The buffer to return.</param>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.ReturnRentedBuffer(System.Char[],System.Boolean)">
            <summary>
            Returns the buffer retrieved from <see cref="!:RentedChars"/>.
            </summary>
            <param name="buffer">The buffer to return.</param>
            <param name="clearBuffer">If <see langword="true"/> then clear the buffer when returned.</param>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.GetPinnableReference">
            <summary>
            Get a pinnable reference to the builder.
            Does not ensure there is a null char after <see cref="P:Corvus.HighPerformance.ValueStringBuilder.Length"/>
            This overload is pattern matched in the C# 7.3+ compiler so you can omit
            the explicit method call, and write eg "fixed (char* c = builder)"
            </summary>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.GetPinnableReference(System.Boolean)">
            <summary>
            Get a pinnable reference to the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Corvus.HighPerformance.ValueStringBuilder.Length"/></param>
        </member>
        <member name="P:Corvus.HighPerformance.ValueStringBuilder.RawChars">
            <summary>Returns the underlying storage of the builder.</summary>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.AsSpan(System.Boolean)">
            <summary>
            Returns a span around the contents of the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Corvus.HighPerformance.ValueStringBuilder.Length"/></param>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.AsMemory">
            <summary>
            Returns the contents of the builder as a <see cref="T:System.ReadOnlyMemory`1"/>, renting the underlying buffer if it
            is not already backed by a rented buffer.
            </summary>
            <returns>The value as a <see cref="T:System.ReadOnlyMemory`1"/></returns>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.AsMemory(System.Int32)">
            <summary>
            Returns the contents of the builder as a <see cref="T:System.ReadOnlyMemory`1"/>, renting the underlying buffer if it
            is not already backed by a rented buffer.
            </summary>
            <param name="start">The index within the string at which to start.</param>
            <returns>The value as a <see cref="T:System.ReadOnlyMemory`1"/></returns>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.AsMemory(System.Int32,System.Int32)">
            <summary>
            Returns the contents of the builder as a <see cref="T:System.ReadOnlyMemory`1"/>, renting the underlying buffer if it
            is not already backed by a rented buffer.
            </summary>
            <param name="start">The index within the string at which to start.</param>
            <param name="length">The length of the span to return.</param>
            <returns>The value as a <see cref="T:System.ReadOnlyMemory`1"/></returns>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.Grow(System.Int32)">
            <summary>
            Resize the internal buffer either by doubling current buffer size or
            by adding <paramref name="additionalCapacityBeyondPos"/> to
            <see cref="F:Corvus.HighPerformance.ValueStringBuilder._pos"/> whichever is greater.
            </summary>
            <param name="additionalCapacityBeyondPos">
            Number of chars requested beyond current position.
            </param>
        </member>
        <member name="M:Corvus.HighPerformance.ValueStringBuilder.SetToDisposed">
            <summary>
            Puts the object into a state preventing accidental continued use an a pool already returned
            to an array, or attempting to retrieve information from the object after it has either
            been disposed, or had its buffer returned to the pool as a result of calling
            <see cref="!:ToString"/>.
            </summary>
        </member>
    </members>
</doc>
